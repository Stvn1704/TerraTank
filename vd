import pygame
import math

# Inicializamos Pygame
pygame.init()

# Definimos el tamaño de la ventana
screen = pygame.display.set_mode((500, 500))
pygame.display.set_caption("Rectángulo que apunta y dispara")

# Definimos colores (RGB)
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Definimos la posición, tamaño y velocidad del rectángulo
rect_x = 250
rect_y = 250
rect_width = 50
rect_height = 20
speed = 5

# Creamos una superficie para el rectángulo
rect_surf = pygame.Surface((rect_width, rect_height))
rect_surf.fill(BLACK)

# Bucle principal
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Obtener la posición del mouse
    mouse_x, mouse_y = pygame.mouse.get_pos()

    # Calcular el ángulo entre el rectángulo y el mouse
    dx = mouse_x - rect_x
    dy = mouse_y - rect_y
    angle = math.atan2(dy, dx)  # Ángulo en radianes

    # Mover el rectángulo con las teclas de flechas
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        rect_x -= speed  # Mover a la izquierda
    if keys[pygame.K_RIGHT]:
        rect_x += speed  # Mover a la derecha
    if keys[pygame.K_UP]:
        rect_y -= speed  # Mover hacia arriba
    if keys[pygame.K_DOWN]:
        rect_y += speed  # Mover hacia abajo

    # Limpiar la pantalla
    screen.fill(WHITE)

    # Rotar la superficie del rectángulo según el ángulo calculado
    rotated_surf = pygame.transform.rotate(rect_surf, -math.degrees(angle))
    rotated_rect = rotated_surf.get_rect(center=(rect_x, rect_y))

    # Dibujar el rectángulo rotado
    screen.blit(rotated_surf, rotated_rect.topleft)

    # Actualizar la pantalla
    pygame.display.flip()

# Salimos de Pygame
pygame.quit()
